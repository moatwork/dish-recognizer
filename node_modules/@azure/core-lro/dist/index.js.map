{"version":3,"file":"index.js","sources":["../src/poller.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\nexport type CancelOnProgress = () => void;\n\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\nexport interface PollerLike<TState, TResult> {\n  poll(options?: { abortSignal?: AbortSignal }): Promise<void>;\n  pollUntilDone(): Promise<TResult>;\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  isDone(): boolean;\n  stopPolling(): void;\n  isStopped(): boolean;\n  cancelOperation(options?: { abortSignal?: AbortSignal }): Promise<void>;\n  getOperationState(): PollOperationState<TResult>;\n  getResult(): TResult | undefined;\n  toString(): string;\n}\n\nexport abstract class Poller<TState, TResult> implements PollerLike<TState, TResult> {\n  private stopped: boolean = true;\n  private resolve?: (value?: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n  protected operation: PollOperation<TState, TResult>;\n\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise(\n      (\n        resolve: (result?: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {});\n  }\n\n  protected abstract async delay(): Promise<void>;\n\n  private async startPolling(): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll();\n      await this.delay();\n    }\n  }\n\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    const state = this.getOperationState();\n    try {\n      if (!this.isDone()) {\n        this.operation = await this.operation.update({\n          abortSignal: options.abortSignal,\n          fireProgress: this.fireProgress.bind(this)\n        });\n        if (this.isDone() && this.resolve) {\n          this.resolve(state.result);\n        }\n      }\n    } catch (e) {\n      state.error = e;\n      if (this.reject) {\n        this.reject(e);\n      }\n      throw e;\n    }\n  }\n\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  private async cancelOnce(options: { abortSignal?: AbortSignal } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n    if (this.reject) {\n      this.reject(new PollerCancelledError(\"Poller cancelled\"));\n    }\n  }\n\n  public poll(options: { abortSignal?: AbortSignal } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise);\n    }\n    return this.pollOncePromise;\n  }\n\n  public async pollUntilDone(): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling().catch(this.reject);\n    }\n    return this.promise;\n  }\n\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  public isDone(): boolean {\n    const state = this.getOperationState();\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  public cancelOperation(options: { abortSignal?: AbortSignal } = {}): Promise<void> {\n    if (!this.stopped) {\n      this.stopped = true;\n    }\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  public getOperationState(): PollOperationState<TResult> {\n    return this.operation.state;\n  }\n\n  public getResult(): TResult | undefined {\n    const state = this.getOperationState();\n    return state.result;\n  }\n\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n"],"names":["__extends"],"mappings":";;;;;;;;;;;;;AAAA;AACA;IASwCA,4CAAK;IAC3C,4BAAY,OAAe;QAA3B,YACE,kBAAM,OAAO,CAAC,SAGf;QAFC,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QACjC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC;;KAC3D;IACH,yBAAC;CAND,CAAwC,KAAK,GAM5C;;IAEyCA,8CAAK;IAC7C,8BAAY,OAAe;QAA3B,YACE,kBAAM,OAAO,CAAC,SAGf;QAFC,KAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC;QACnC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;;KAC7D;IACH,2BAAC;CAND,CAA0C,KAAK,GAM9C;;IAyBC,gBAAY,SAAyC;QAArD,iBAeC;QAxBO,YAAO,GAAY,IAAI,CAAC;QAMxB,0BAAqB,GAAmC,EAAE,CAAC;QAIjE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CACxB,UACE,OAAmC,EACnC,MAA0E;YAE1E,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB,CACF,CAAC;;;;QAIF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAQ,CAAC,CAAC;KAC9B;IAIa,6BAAY,GAA1B;;;;;wBACE,IAAI,IAAI,CAAC,OAAO,EAAE;4BAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;yBACtB;;;8BACM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;wBACxC,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAAjB,SAAiB,CAAC;wBAClB,qBAAM,IAAI,CAAC,KAAK,EAAE,EAAA;;wBAAlB,SAAkB,CAAC;;;;;;KAEtB;IAEa,yBAAQ,GAAtB,UAAuB,OAA+C;QAA/C,wBAAA,EAAA,YAA+C;;;;;;wBAC9D,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;6BAEjC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAd,wBAAc;wBAChB,KAAA,IAAI,CAAA;wBAAa,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCAC3C,WAAW,EAAE,OAAO,CAAC,WAAW;gCAChC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;6BAC3C,CAAC,EAAA;;wBAHF,GAAK,SAAS,GAAG,SAGf,CAAC;wBACH,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;4BACjC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;yBAC5B;;;;;wBAGH,KAAK,CAAC,KAAK,GAAG,GAAC,CAAC;wBAChB,IAAI,IAAI,CAAC,MAAM,EAAE;4BACf,IAAI,CAAC,MAAM,CAAC,GAAC,CAAC,CAAC;yBAChB;wBACD,MAAM,GAAC,CAAC;;;;;KAEX;IAEO,6BAAY,GAApB,UAAqB,KAAa;QAChC,KAAuB,UAA0B,EAA1B,KAAA,IAAI,CAAC,qBAAqB,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;YAA9C,IAAM,QAAQ,SAAA;YACjB,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;KACF;IAEa,2BAAU,GAAxB,UAAyB,OAA2C;QAA3C,wBAAA,EAAA,YAA2C;;;;;;wBAClE,KAAA,IAAI,CAAA;wBAAa,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAA;;wBAArD,GAAK,SAAS,GAAG,SAAoC,CAAC;wBACtD,IAAI,IAAI,CAAC,MAAM,EAAE;4BACf,IAAI,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,kBAAkB,CAAC,CAAC,CAAC;yBAC3D;;;;;KACF;IAEM,qBAAI,GAAX,UAAY,OAA2C;QAAvD,iBASC;QATW,wBAAA,EAAA,YAA2C;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAM,oBAAoB,GAAG;gBAC3B,KAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aAClC,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;SACvE;QACD,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEY,8BAAa,GAA1B;;;gBACE,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxC;gBACD,sBAAO,IAAI,CAAC,OAAO,EAAC;;;KACrB;IAEM,2BAAU,GAAjB,UAAkB,QAAiC;QAAnD,iBAKC;QAJC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,OAAO;YACL,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,QAAQ,GAAA,CAAC,CAAC;SACvF,CAAC;KACH;IAEM,uBAAM,GAAb;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACvC,OAAO,OAAO,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;KACvE;IAEM,4BAAW,GAAlB;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,kBAAkB,CAAC,gCAAgC,CAAC,CAAC,CAAC;aACvE;SACF;KACF;IAEM,0BAAS,GAAhB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEM,gCAAe,GAAtB,UAAuB,OAA2C;QAA3C,wBAAA,EAAA,YAA2C;QAChE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC/C;aAAM,IAAI,OAAO,CAAC,WAAW,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEM,kCAAiB,GAAxB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC7B;IAEM,0BAAS,GAAhB;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACvC,OAAO,KAAK,CAAC,MAAM,CAAC;KACrB;IAEM,yBAAQ,GAAf;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAClC;IACH,aAAC;CAAA;;;;;;"}